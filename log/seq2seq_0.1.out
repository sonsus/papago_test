Start reading and get iterators 
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.1
    weight_decay: 0
)
CELoss()
{'N': 6,
 '_training': True,
 'batchsize': 128,
 'beamsize': 4,
 'ckpt_path': PosixPath('trained_models'),
 'd_ff': 2048,
 'd_model': 512,
 'dataroot': PosixPath('data'),
 'debug': False,
 'device': 'cuda',
 'dropout': 0.3,
 'dropout_tr': 0.1,
 'eps': 1e-08,
 'factor': 0.5,
 'factor_tr': 2,
 'h': 8,
 'heu_penalty': -0.1,
 'hidden_size': 256,
 'label_smoothing': 0.2,
 'learning_rate': 0.1,
 'log_cmd': False,
 'log_path': 'log/seq2seq_adam_ep100_labelsmooth0.2_d1109_t2133',
 'lr_tr': 0,
 'lrschedule': 'rop',
 'max_epochs': 100,
 'metrics': ['bleu', 'meteor', 'cider', 'rouge'],
 'min_lr': 1e-07,
 'mode': 'min',
 'model': 'seq2seq',
 'optimizer': 'adam',
 'patience': 1,
 'pretrained_ep': -1,
 'save_every': 2,
 'threshold': 0.01,
 'threshold_mode': 'rel',
 'warmup': 4000,
 'word_drop': 0.05}
SOS, EOS, PAD tokens are as follows: (660, 661, 659)
MAX and MIN tokens = 658, 0
epoch: 1  completed
trg: tensor([[607, 339,  68,  ..., 211,  56, 661],
        [606, 338,  68,  ..., 660, 659, 659],
        [607, 479,  68,  ..., 659, 659, 659],
        ...,
        [211, 474, 661,  ..., 659, 659, 659],
        [564, 661, 659,  ..., 659, 659, 659],
        [253, 661, 659,  ..., 659, 659, 659]], device='cuda:0')
teacher: tensor([[15, 10,  9,  ..., 23, 21, 25],
        [11, 11,  8,  ..., 11, 23, 23],
        [14, 19, 12,  ..., 23, 15, 22],
        ...,
        [ 0,  0,  8,  ...,  8,  0,  2],
        [25,  1,  4,  ...,  0,  0,  1],
        [ 0,  0,  0,  ...,  1,  0,  1]], device='cuda:0')
trg_eval: tensor([[607, 158,  68,  ...,  19,  85, 661],
        [607, 158,  68,  ..., 661, 659, 659],
        [607, 158,  68,  ..., 659, 659, 659],
        ...,
        [ 64, 211, 108,  ..., 659, 659, 659],
        [147, 570, 389,  ..., 659, 659, 659],
        [189,  68, 559,  ..., 659, 659, 659]], device='cuda:0')
greedy: tensor([651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 651,
        651, 651, 651, 651, 651], device='cuda:0')
beam: tensor([[651, 651, 651, 651, 651, 651, 651, 651, 651, 651, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
         334, 334, 334, 334, 334]], device='cuda:0')
epoch: 2  completed
trg: tensor([[607, 479,  68,  ..., 426,  86, 661],
        [495,  68, 158,  ..., 199, 661, 659],
        [607, 158,  68,  ..., 339, 661, 659],
        ...,
        [283, 661, 659,  ..., 659, 659, 659],
        [564, 661, 659,  ..., 659, 659, 659],
        [616, 661, 659,  ..., 659, 659, 659]], device='cuda:0')
teacher: tensor([[ 2, 11,  2,  ..., 29, 31, 36],
        [ 4, 15, 30,  ..., 16,  9, 35],
        [ 2,  3, 23,  ..., 20, 18, 35],
        ...,
        [30,  0, 30,  ...,  0,  0,  1],
        [ 2,  0, 32,  ...,  1,  0,  1],
        [34,  0, 31,  ...,  0,  1,  1]], device='cuda:0')
trg_eval: tensor([[607, 158,  68,  ...,  19,  85, 661],
        [607, 158,  68,  ..., 661, 659, 659],
        [607, 158,  68,  ..., 659, 659, 659],
        ...,
        [ 64, 211, 108,  ..., 659, 659, 659],
        [147, 570, 389,  ..., 659, 659, 659],
        [189,   0, 559,  ..., 659, 659, 659]], device='cuda:0')
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660], device='cuda:0')
beam: tensor([[198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
         198, 198, 198, 198, 198]], device='cuda:0')
saving epoch 2
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_adam_ep100_labelsmooth0.2_d1109_t2133/ep.2_loss.4.4777.pth <<<
epoch: 3  completed
trg: tensor([[261,  86,  68,  ..., 301, 359, 661],
        [ 79, 309,  67,  ..., 659, 659, 659],
        [607, 154,  67,  ..., 659, 659, 659],
        ...,
        [186, 173, 661,  ..., 659, 659, 659],
        [563, 660, 659,  ..., 659, 659, 659],
        [483, 660, 659,  ..., 659, 659, 659]], device='cuda:0')
teacher: tensor([[13, 16, 18,  ..., 16,  1, 22],
        [19, 17, 21,  ...,  1, 19, 19],
        [13, 17, 10,  ..., 12, 19,  3],
        ...,
        [ 2, 17,  5,  ...,  2,  1,  2],
        [ 1, 18,  0,  ...,  0,  1,  1],
        [ 2, 18,  0,  ...,  0,  1,  0]], device='cuda:0')
trg_eval: tensor([[607, 158,   0,  ...,   0,  85, 661],
        [607, 158,   0,  ..., 661, 659, 659],
        [607, 158,  68,  ..., 659, 659, 659],
        ...,
        [ 64, 211, 108,  ..., 659, 659, 659],
        [147, 570, 389,  ..., 659, 659, 659],
        [189,  68, 559,  ..., 659, 659, 659]], device='cuda:0')
greedy: tensor([81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
        81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
        81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
        81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
        81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
        81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81], device='cuda:0')
beam: tensor([[ 81,  81,  81, 515, 567, 177, 177, 177,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,  86,
          86,  86,  86,  86,  86]], device='cuda:0')
epoch: 4  completed
trg: tensor([[283, 551,  68,  ..., 406, 155, 661],
        [ 86, 162,  68,  ...,  74, 661, 659],
        [ 87, 449,  68,  ..., 659, 659, 659],
        ...,
        [473, 661, 659,  ..., 659, 659, 659],
        [274, 661, 659,  ..., 659, 659, 659],
        [628, 661, 659,  ..., 659, 659, 659]], device='cuda:0')
teacher: tensor([[20,  2,  2,  ...,  4,  8, 32],
        [10,  1, 22,  ..., 21,  0, 31],
        [13,  9, 12,  ..., 24,  7, 29],
        ...,
        [ 3, 23, 31,  ...,  1,  3,  1],
        [ 2, 20,  2,  ...,  0,  0,  1],
        [ 2, 21, 30,  ...,  1,  1,  1]], device='cuda:0')
trg_eval: tensor([[607, 158,  68,  ...,   0,  85, 661],
        [607, 158,  68,  ..., 661, 659, 659],
        [607, 158,  68,  ..., 659, 659, 659],
        ...,
        [ 64, 211, 108,  ..., 659, 659, 659],
        [147, 570, 389,  ..., 659, 659, 659],
        [189,  68, 559,  ..., 659, 659, 659]], device='cuda:0')