Start reading and get iterators 
NoamOpt (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.98)
    eps: 1e-08
    lr: 0
    weight_decay: 0
)
CELoss()
{'N': 6,
 '_training': True,
 'batchsize': 128,
 'beamsize': 4,
 'ckpt_path': PosixPath('trained_models'),
 'd_ff': 2048,
 'd_model': 512,
 'dataroot': PosixPath('data'),
 'debug': False,
 'device': 'cuda',
 'dropout': 0.3,
 'dropout_tr': 0.1,
 'eps': 1e-08,
 'factor': 0.5,
 'factor_tr': 1,
 'h': 8,
 'hidden_size': 256,
 'learning_rate': 0.001,
 'log_cmd': False,
 'log_path': 'log/seq2seq_optim_adam_0.001_ep50_d1109_t0311',
 'lr_tr': 0,
 'lrschedule': 'noam',
 'max_epoch': 100,
 'max_epochs': 50,
 'metrics': ['bleu', 'meteor', 'cider', 'rouge'],
 'min_lr': 1e-07,
 'mode': 'min',
 'model': 'seq2seq',
 'optimizer': 'adam',
 'patience': 2,
 'pretrained_ep': -1,
 'save_every': 4,
 'threshold': 0.0005,
 'threshold_mode': 'rel',
 'warmup': 6900,
 'word_drop': 0.05}
SOS, EOS, PAD tokens are as follows: (660, 661, 659)
MAX and MIN tokens = 658, 0
epoch: 1  completed
greedy: tensor([368, 462, 277, 277, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
        313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
        313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
        313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
        313, 313, 313, 313], device='cuda:0')
beam: tensor([[ 22, 312, 370, 424, 499, 499, 499, 499, 277, 100, 496, 497, 576, 249,
         304, 407, 411, 411, 408, 264, 473, 297, 154, 111, 499, 264, 473, 297,
         297, 154, 111, 499, 277, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313]], device='cuda:0')
epoch: 2  completed
greedy: tensor([378, 379, 145, 212, 212, 242, 409,  19,  19, 510, 337, 157, 180,  66,
          2, 360, 404, 359, 359, 359, 359, 359, 359, 359, 604, 411, 439, 561,
        546, 294, 582, 267,  40, 365, 496, 497, 576, 249, 551, 236, 136, 231,
        231, 593,   0,   7, 369, 556, 192,  84, 277, 277, 313, 313, 313, 313,
        313, 313, 313, 313], device='cuda:0')
beam: tensor([[ 22, 312, 370, 355, 415, 134, 632, 642, 243, 561, 546,   4, 587, 310,
         368, 462, 368,  50, 202, 336, 403,  44, 240, 240, 520, 110, 523, 632,
         523,  37, 381, 219,  13,  23,  72, 419, 419, 419, 419, 558,   1, 496,
         419, 419, 419,  92, 419, 419, 419,  92, 227, 426,  65, 404, 316, 368,
         462, 277, 277, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
         313, 313]], device='cuda:0')
epoch: 3  completed
greedy: tensor([378, 498, 229, 253, 373, 203, 182, 447, 287, 293, 217, 136, 598, 575,
        247, 315, 546, 294, 570, 303,  40,  81, 195, 348, 226, 249, 303,  81,
        195, 246, 358, 305, 100, 496, 497, 576, 224, 322, 652, 277, 277, 313,
        313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
        313, 313, 313, 313], device='cuda:0')
beam: tensor([[19, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 4  completed
greedy: tensor([378, 498, 229, 253, 373, 203, 182, 447, 287, 293, 217, 136, 598, 575,
        247, 315, 546, 294, 570, 303,  40,  81, 195, 246, 358, 305, 100,  68,
         68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,
         68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,  68,
         68,  68,  68,  68], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
saving epoch 4
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.4_loss.6.0473.pth <<<
epoch: 5  completed
greedy: tensor([68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 6  completed
greedy: tensor([68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68], device='cuda:0')
beam: tensor([[19, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 7  completed
greedy: tensor([68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68], device='cuda:0')
beam: tensor([[19, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 8  completed
greedy: tensor([68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
        68, 68, 68, 68, 68, 68], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
saving epoch 8
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.8_loss.4.2855.pth <<<
epoch: 9  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 10  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 11  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 12  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
saving epoch 12
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.12_loss.2.8418.pth <<<
epoch: 13  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 14  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 15  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 16  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
saving epoch 16
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.16_loss.1.8144.pth <<<
epoch: 17  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
         68, 68, 68, 68, 68, 68, 68, 68, 68, 68]], device='cuda:0')
epoch: 18  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 19  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 20  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 20
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.20_loss.1.0050.pth <<<
epoch: 21  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 22  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 23  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 24  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 24
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.24_loss.0.5149.pth <<<
epoch: 25  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 26  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 27  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 28  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 28
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.28_loss.0.2613.pth <<<
epoch: 29  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 30  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 31  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 32  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 32
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.32_loss.0.1356.pth <<<
epoch: 33  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 34  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 35  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 36  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 36
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.36_loss.0.0758.pth <<<
epoch: 37  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 38  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 39  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 40  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 40
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.40_loss.0.0478.pth <<<
epoch: 41  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 42  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 43  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 44  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 44
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.44_loss.0.0308.pth <<<
epoch: 45  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 46  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 47  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 48  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
saving epoch 48
>>> Saving MODEL and VOCAB @ trained_models/seq2seq/seq2seq_optim_adam_0.001_ep50_d1109_t0311/ep.48_loss.0.0191.pth <<<
epoch: 49  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
epoch: 50  completed
greedy: tensor([660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
        660, 660, 660, 660], device='cuda:0')
beam: tensor([[660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
         660, 660]], device='cuda:0')
Traceback (most recent call last):
  File "main.py", line 63, in <module>
    Fire(Main)
  File "/home/ywjang/miniconda3/envs/write2u/lib/python3.7/site-packages/fire/core.py", line 138, in Fire
    component_trace = _Fire(component, args, parsed_flag_args, context, name)
  File "/home/ywjang/miniconda3/envs/write2u/lib/python3.7/site-packages/fire/core.py", line 471, in _Fire
    target=component.__name__)
  File "/home/ywjang/miniconda3/envs/write2u/lib/python3.7/site-packages/fire/core.py", line 675, in _CallAndUpdateTrace
    component = fn(*varargs, **kwargs)
  File "main.py", line 43, in train
    runtrain(args)
  File "/home/ywjang/miniconda3/envs/write2u/lib/python3.7/contextlib.py", line 119, in __exit__
    next(self.gen)
  File "/home/ywjang/seonil/papago_test/utils.py", line 114, in log_time_n_args
    with (args.log_path / f"{get_dirname_from_args(args)}.time").open(mode = 'w') as f:
TypeError: unsupported operand type(s) for /: 'str' and 'str'
